@inject ISuperHeroService superHeroService
@*@inject IJSInProcessRuntime JSRuntime*@

@if (Hero.Id == 0)
{
    <p><b>Create New Hero</b> </p>
}

else
{
    <p>Edit @Hero.HeroName </p>
}

<EditForm Model="Hero" OnSubmit="HandleSubmit">
    <div class="form-group">
        @*<label>First Name</label>*@
        <InputText @bind-Value="Hero.FirstName" class="form-control" PlaceHolder="First Name"></InputText>
    </div>
    <div class="from-group">
        @*<label>Last Name</label>*@
        <InputText @bind-Value="Hero.LastName" class="form-control" PlaceHolder="Last Name"></InputText>
    </div>
    <div class="from-group">
        @*<label>Hero Name</label>*@ <br />
        <InputText @bind-Value="Hero.HeroName" class="form-control" PlaceHolder="Hero Name"></InputText>
    </div>
    <div class="form-group">
        @*<label>Comic</label> <br />*@<br />
        <InputRadioGroup @bind-Value="Comic_Id" class="form-control">
            @foreach (var c in superHeroService.Comics)
            {
                int c_id = c.Id;
                <InputRadio Value="@c.Id" /> <span style="padding-left: 5px;">@c.Name</span> <br />
            }
        </InputRadioGroup>
    </div>

    <button type="submit" class="btn btn-success">Submit</button>
    @if (IsModif == 1)
    {
        <MudAlert Severity="Severity.Success" Dense="true" Class="my-2 CssShadow" Height="10" Width="5px">Modifier avec succès</MudAlert>


    }
    else if (IsModif == 2)
    {
        <MudAlert Severity="Severity.Success" Dense="true" Class="my-2" Height="10">Créer avec succès</MudAlert>
    }
</EditForm>


@code
{
    @*[Parameter]
        public int Id { get; set; }*@
    @*[Parameter]
        public SuperHeroDB.Shared.SuperHero hero { get; set; }*@
   @* string CssShadow = "mud - elevation - 4 py - 8 px - 10 rounded white";
    *@
    int IsModif = 0;
    int Comic_Id = 1;
    [Parameter]
    public SuperHeroDB.Shared.SuperHero Hero { get; set; } = new SuperHeroDB.Shared.SuperHero();
    @*protected override async Task OnInitializedAsync()*@
    @*protected override async Task OnParametersSetAsync()*@
protected override async Task OnParametersSetAsync()
{
    await superHeroService.GetComics();
    Comic_Id = (Hero.ComicId);
}

async void HandleSubmit()
{
       @* Hero.Comic = superHeroService.Comics.FirstOrDefault(c => c.Id == Comic_Id);*@
        Hero.ComicId = Comic_Id;

        if (Hero.Id == 0)
        {
            Console.WriteLine("Création!");
            await superHeroService.CreateSuperHero(Hero);
            Console.WriteLine(Hero.ToString());
            IsModif = 2;
        }
        else
        {
            Console.WriteLine("Modification!");
            await superHeroService.UpdateSuperHero(Hero, Hero.Id);
            @*Hero.Id = Id +1;*@
            Hero.Id = 0;
            IsModif = 1;
        }


        @*JSRuntime.InvokeVoidAsync("console.log", Hero);*@
    }

}



@*<EditForm Model="Hero" OnSubmit="HandleSubmit">
        <InputText @bind-Value="Hero.FirstName" class="form-control" PlaceHolder="First Name"></InputText>
        <InputText @bind-Value="Hero.LastName" class="form-control" PlaceHolder="Last Name"></InputText>
        <InputText @bind-Value="Hero.HeroName" class="form-control" PlaceHolder="Hero Name"></InputText>
        <InputRadioGroup @bind-Value="Hero.Comic" class="form-control">
            @foreach (var comic in superHeroService.Comics)
            {
                <InputRadio Value="@comic.Id"> <span style="padding-left: 5px;">@comic.Name</span> </InputRadio>
            }
        </InputRadioGroup>
        <button type="submit" class="btn btn-primary">Submit</button>
    </EditForm>*@
